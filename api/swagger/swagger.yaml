swagger: "2.0"
info:
  version: "0.0.1"
  title: CSCI3800 Scenario 1 Project Team 8
# during dev, should point to your local machine
host: localhost
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-a127-config:
  CSCI3800_Team8_RemoteProxy.key: &apigeeProxyKey CONFIGURED
  CSCI3800_Team8_RemoteProxy.uri: &apigeeProxyUri CONFIGURED
x-a127-services:
  basic:
        provider: volos-oauth-apigee
        options:
          key: *apigeeProxyKey
          uri: *apigeeProxyUri
          passwordCheck:
            helper: helper
            function: passwordCheck
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    x-a127-apply: {}
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      security:
        - basic: []
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /locationtest:
    # binds a127 app logic to a route
    x-swagger-router-controller: location
    x-a127-apply: {}
    get:
      description: Returns a geographic location of an ip
      # used as the method name of the controller
      operationId: locationTest
      parameters:
        - name: ip
          in: query
          description: The ip address to be looked up
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TestResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /compareuserlocationtest:
    # binds a127 app logic to a route
    x-swagger-router-controller: location
    x-a127-apply: {}
    get:
      description: Compares a user to a location
      # used as the method name of the controller
      operationId: compareUserLocationTest
      parameters:
        - name: ip
          in: query
          description: The ip address to be checked
          required: true
          type: string
        - name: paymentusername
          in: query
          description: The username of the payer to be checked
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TestResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /payment:
    # binds a127 app logic to a route
    x-swagger-router-controller: payment
    x-a127-apply: {}
    get:
      description: Test the payment api
      # used as the method name of the controller
      operationId: paymentTest
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/TestResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Approves/Denies a payment transaction based on ip location
      # used as the method name of the controller
      operationId: payment
      parameters:
        - name: paymentusername
          in: header
          description: The name of the payer
          required: true
          type: string
        - name: transactionAmount
          in: header
          description: amount for payment
          required: true
          type: string
        - name: zip
          in: header
          description: Zip code of card for payment
          required: true
          type: string
        - name: cardType
          in: header
          description: Type of card being used
          required: true
          type: string
        - name: cardNum
          in: header
          description: Card number
          required: true
          type: string
        - name: cardExpMonth
          in: header
          description: month of expiration
          required: true
          type: string
        - name: cardExpYear
          in: header
          description: year of expiration
          required: true
          type: string
        - name: cvv
          in: header
          description: security number on back of cardExpMonth
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/PaymentResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  TestResponse:
    required:
      - message
    properties:
      message:
        type: string
  PaymentResponse:
    required:
      - message
    properties:
      message:
        type: string
securityDefinitions:
  basic:
    type: basic